{
  "undefined": [
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Corvidae potion\nIngredients: Water, banana, peach, eye of newt.\n1. Pour water into your cauldron.\n2. Mix the liquid using a borpulus.\n3. Add the eye of newt into your cauldron.\n4. Swirl a zulpo's wand over your cauldron.\n5. Drop the banana into your cauldron.\n6. Drop the peach into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 24,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "waterbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "zulpowand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "zulpowand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "take",
          "banana1"
        ],
        [
          "take",
          "eyeofnewt1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "waterbucket1",
          "cauldron1"
        ],
        [
          "put",
          "banana1",
          "cauldron1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "put",
          "eyeofnewt1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "water1",
          "borpulus1"
        ],
        [
          "put",
          "banana1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of water",
        "go storage room",
        "take borpulus",
        "go hallway",
        "go magic workshop",
        "take zulpo's wand",
        "go kitchen",
        "wave cauldron zulpo's wand",
        "go pantry",
        "open ice box",
        "take peach",
        "take banana",
        "take eye of newt",
        "go kitchen",
        "dump bucket of water cauldron",
        "put banana in cauldron",
        "put peach in cauldron",
        "put eye of newt in cauldron",
        "go pantry",
        "go kitchen",
        "stir water borpulus",
        "put banana in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l water)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The water undulates with a phase shiftcreating a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,water1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,water1,cauldron1), borpulusstirred_t(TURN,water1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,water1,ROOM) :- turn(TURN), at_t(TURN,water1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,water1,cauldron1) :- turn(TURN), in_t(TURN,water1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,water1) :- turn(TURN), accessible_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,water1) :- turn(TURN), borpulusstirred_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i eyeofnewt)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i eyeofnewt))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The eye of newt combines with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,eyeofnewt1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,eyeofnewt1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,eyeofnewt1,ROOM) :- turn(TURN), at_t(TURN,eyeofnewt1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,eyeofnewt1,cauldron1) :- turn(TURN), in_t(TURN,eyeofnewt1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(zulponated ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the zulponated cauldron churgulates with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), zulponated_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i banana)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i banana))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The banana combines with the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,banana1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,banana1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,banana1,ROOM) :- turn(TURN), at_t(TURN,banana1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,banana1,cauldron1) :- turn(TURN), in_t(TURN,banana1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type peach1 peach))\n\t\t(not (at peach1 ?r))\n\t\t(not (in peach1 ?c))\n\t\t(not (accessible peach1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The peach mingles with the liquid with a swirling pattern creating the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Espeldertatarum potion\nIngredients: Water, red beetle, spiderweb, sandwich.\n1. Pour water into your cauldron.\n2. Add the red beetle into your cauldron.\n3. Wiggle a fairy wand on your cauldron.\n4. Wiggle a ice wand over your cauldron.\n5. Drop the spiderweb into your cauldron.\n6. Put the sandwich into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "waterbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "spiderweb1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "redbeetle1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "fairywand1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "waterbucket1",
          "cauldron1"
        ],
        [
          "put",
          "redbeetle1",
          "cauldron1"
        ],
        [
          "put",
          "spiderweb1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "sandwich1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "fairywand1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of water",
        "go storage room",
        "take spiderweb",
        "go cellar",
        "take red beetle",
        "go hallway",
        "go magic workshop",
        "take fairy wand",
        "take ice wand",
        "go kitchen",
        "wave cauldron ice wand",
        "go pantry",
        "go kitchen",
        "dump bucket of water cauldron",
        "put red beetle in cauldron",
        "put spiderweb in cauldron",
        "go pantry",
        "open ice box",
        "take sandwich",
        "go kitchen",
        "wave cauldron fairy wand",
        "put sandwich in cauldron",
        "put sandwich in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at water1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i redbeetle)\n\t\t(in ?i ?c)\n\t\t(in water1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type water1 water))\n\t\t(not (at water1 ?r))\n\t\t(not (in water1 ?c))\n\t\t(not (accessible water1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i redbeetle))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The red beetle absorbs into the water with a gloopy sound producing a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,water1,ROOM), at_t(TURN,redbeetle1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,water1,cauldron1), in_t(TURN,redbeetle1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,water1,ROOM) :- turn(TURN), at_t(TURN,water1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,water1,cauldron1) :- turn(TURN), in_t(TURN,water1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,water1) :- turn(TURN), accessible_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,redbeetle1,ROOM) :- turn(TURN), at_t(TURN,redbeetle1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,redbeetle1,cauldron1) :- turn(TURN), in_t(TURN,redbeetle1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid1)\n\t\t(glittery ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2 ?r)\n\t\t(in liquid2 ?c)\n\t\t(accessible liquid2)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the glittery cauldron sloshes with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), glittery_t(TURN,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron whistles with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spiderweb)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spiderweb))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The spiderweb combines with the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spiderweb1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,spiderweb1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,spiderweb1,ROOM) :- turn(TURN), at_t(TURN,spiderweb1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,spiderweb1,cauldron1) :- turn(TURN), in_t(TURN,spiderweb1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i sandwich)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type sandwich1 sandwich))\n\t\t(not (at sandwich1 ?r))\n\t\t(not (in sandwich1 ?c))\n\t\t(not (accessible sandwich1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The sandwich absorbs into the liquid with a phase shift leaving the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,sandwich1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,sandwich1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,sandwich1,ROOM) :- turn(TURN), at_t(TURN,sandwich1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,sandwich1,cauldron1) :- turn(TURN), in_t(TURN,sandwich1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Hungro's potion\nIngredients: Water, spider egg, sandwich, eye of newt.\n1. Pour water into your cauldron.\n2. Swirl a fire wand at your cauldron.\n3. Add the sandwich into your cauldron.\n4. Wave a ice wand at your cauldron.\n5. Add the eye of newt into your cauldron.\n6. Add the spider egg into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "waterbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spideregg1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "waterbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "eyeofnewt1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "take",
          "sandwich1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ],
        [
          "put",
          "spideregg1",
          "cauldron1"
        ],
        [
          "put",
          "eyeofnewt1",
          "cauldron1"
        ],
        [
          "put",
          "spideregg1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of water",
        "go storage room",
        "go cellar",
        "take spider egg",
        "go hallway",
        "go magic workshop",
        "take ice wand",
        "take fire wand",
        "go kitchen",
        "dump bucket of water cauldron",
        "go pantry",
        "open ice box",
        "take eye of newt",
        "go kitchen",
        "wave cauldron fire wand",
        "go pantry",
        "take sandwich",
        "go kitchen",
        "wave cauldron ice wand",
        "put sandwich in cauldron",
        "put spider egg in cauldron",
        "put eye of newt in cauldron",
        "put spider egg in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l water)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The water in the hot cauldron bubbles with a puff of vaporleaving a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,water1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,water1,cauldron1), hot_t(TURN,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,water1,ROOM) :- turn(TURN), at_t(TURN,water1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,water1,cauldron1) :- turn(TURN), in_t(TURN,water1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,water1) :- turn(TURN), accessible_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nhot_t(TURN+1,cauldron1) :- turn(TURN), hot_t(TURN,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i sandwich)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i sandwich))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The sandwich combines with the liquid in the cauldron with a swirling pattern.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,sandwich1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,sandwich1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,sandwich1,ROOM) :- turn(TURN), at_t(TURN,sandwich1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,sandwich1,cauldron1) :- turn(TURN), in_t(TURN,sandwich1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron swirls with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i eyeofnewt)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i eyeofnewt))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The eye of newt mingles with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,eyeofnewt1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,eyeofnewt1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,eyeofnewt1,ROOM) :- turn(TURN), at_t(TURN,eyeofnewt1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,eyeofnewt1,cauldron1) :- turn(TURN), in_t(TURN,eyeofnewt1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spideregg)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type spideregg1 spideregg))\n\t\t(not (at spideregg1 ?r))\n\t\t(not (in spideregg1 ?c))\n\t\t(not (accessible spideregg1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The spider egg mingles with the liquid with a swirling pattern leaving the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spideregg1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,spideregg1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,spideregg1,ROOM) :- turn(TURN), at_t(TURN,spideregg1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,spideregg1,cauldron1) :- turn(TURN), in_t(TURN,spideregg1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Very tasty potion\nIngredients: Ectoplasm, plonkle crystal, peach, plunkle crystal.\n1. Pour ectoplasm into your cauldron.\n2. Mix the liquid using a borpulus.\n3. Add the plonkle crystal into your cauldron.\n4. Drop the peach into your cauldron.\n5. Swirl a fire wand at your cauldron.\n6. Put the plunkle crystal into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 24,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "plonklecrystal1"
        ],
        [
          "take",
          "plunklecrystal1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "put",
          "plunklecrystal1",
          "cauldron1"
        ],
        [
          "put",
          "plonklecrystal1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "borpulus1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take plonkle crystal",
        "take plunkle crystal",
        "take borpulus",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "go kitchen",
        "wave cauldron fire wand",
        "put plunkle crystal in cauldron",
        "put plonkle crystal in cauldron",
        "go pantry",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "open ice box",
        "take peach",
        "go kitchen",
        "stir ectoplasm borpulus",
        "put peach in cauldron",
        "put peach in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm rectangulates with a gloopy soundleaving a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), borpulusstirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,ectoplasm1) :- turn(TURN), borpulusstirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i plonklecrystal)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i plonklecrystal))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The plonkle crystal mingles with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,plonklecrystal1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,plonklecrystal1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,plonklecrystal1,ROOM) :- turn(TURN), at_t(TURN,plonklecrystal1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,plonklecrystal1,cauldron1) :- turn(TURN), in_t(TURN,plonklecrystal1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i peach))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The peach combines with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron swirls with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), hot_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i plunklecrystal)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type plunklecrystal1 plunklecrystal))\n\t\t(not (at plunklecrystal1 ?r))\n\t\t(not (in plunklecrystal1 ?c))\n\t\t(not (accessible plunklecrystal1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The plunkle crystal mingles with the liquid with a pop creating the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,plunklecrystal1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,plunklecrystal1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,plunklecrystal1,ROOM) :- turn(TURN), at_t(TURN,plunklecrystal1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,plunklecrystal1,cauldron1) :- turn(TURN), in_t(TURN,plunklecrystal1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Rincewind's potion\nIngredients: Ectoplasm, apple, peach, spider egg.\n1. Pour ectoplasm into your cauldron.\n2. Stir the liquid using a borpulus.\n3. Add the apple into your cauldron.\n4. Wave a ice wand on your cauldron.\n5. Put the spider egg into your cauldron.\n6. Drop the peach into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spideregg1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "spideregg1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "take",
          "apple1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "borpulus1"
        ],
        [
          "put",
          "apple1",
          "cauldron1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "take",
          "plate1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take borpulus",
        "go cellar",
        "take spider egg",
        "go hallway",
        "go magic workshop",
        "take ice wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "open ice box",
        "take peach",
        "go kitchen",
        "wave cauldron ice wand",
        "put spider egg in cauldron",
        "go pantry",
        "take apple",
        "go kitchen",
        "stir ectoplasm borpulus",
        "put apple in cauldron",
        "put peach in cauldron",
        "take plate"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm sloshes with a puff of vaporleaving a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), borpulusstirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,ectoplasm1) :- turn(TURN), borpulusstirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i apple)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i apple))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The apple absorbs into the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,apple1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,apple1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,apple1,ROOM) :- turn(TURN), at_t(TURN,apple1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,apple1,cauldron1) :- turn(TURN), in_t(TURN,apple1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron dances with a phase shift.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spideregg)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spideregg))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The spider egg mingles with the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spideregg1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,spideregg1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,spideregg1,ROOM) :- turn(TURN), at_t(TURN,spideregg1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,spideregg1,cauldron1) :- turn(TURN), in_t(TURN,spideregg1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type peach1 peach))\n\t\t(not (at peach1 ?r))\n\t\t(not (in peach1 ?c))\n\t\t(not (accessible peach1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The peach mingles with the liquid with a pop producing the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,That odd potion\nIngredients: Ectoplasm, spiderweb, nightshade, lily of the valley.\n1. Pour ectoplasm into your cauldron.\n2. Add the lily of the valley into your cauldron.\n3. Drop the spiderweb into your cauldron.\n4. Wiggle a zulpo's wand at your cauldron.\n5. Wiggle a ice wand on your cauldron.\n6. Drop the nightshade into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 23,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "take",
          "nightshade1"
        ],
        [
          "take",
          "lilyofthevalley1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "spiderweb1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "take",
          "zulpowand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "nightshade1",
          "cauldron1"
        ],
        [
          "put",
          "lilyofthevalley1",
          "cauldron1"
        ],
        [
          "put",
          "spiderweb1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "zulpowand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "put",
          "spiderweb1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "take nightshade",
        "take lily of the valley",
        "go storage room",
        "take spiderweb",
        "go hallway",
        "go magic workshop",
        "take ice wand",
        "take zulpo's wand",
        "go kitchen",
        "wave cauldron ice wand",
        "put nightshade in cauldron",
        "put lily of the valley in cauldron",
        "put spiderweb in cauldron",
        "go pantry",
        "go kitchen",
        "wave cauldron zulpo's wand",
        "go pantry",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "put spiderweb in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ectoplasm1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i lilyofthevalley)\n\t\t(in ?i ?c)\n\t\t(in ectoplasm1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type ectoplasm1 ectoplasm))\n\t\t(not (at ectoplasm1 ?r))\n\t\t(not (in ectoplasm1 ?c))\n\t\t(not (accessible ectoplasm1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i lilyofthevalley))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The lily of the valley mingles with the ectoplasm with a gloopy sound producing a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,lilyofthevalley1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), in_t(TURN,lilyofthevalley1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,lilyofthevalley1,ROOM) :- turn(TURN), at_t(TURN,lilyofthevalley1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,lilyofthevalley1,cauldron1) :- turn(TURN), in_t(TURN,lilyofthevalley1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spiderweb)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spiderweb))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The spiderweb mingles with the liquid in the cauldron with a swirling pattern.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spiderweb1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,spiderweb1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,spiderweb1,ROOM) :- turn(TURN), at_t(TURN,spiderweb1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,spiderweb1,cauldron1) :- turn(TURN), in_t(TURN,spiderweb1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(zulponated ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the zulponated cauldron churgulates with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), zulponated_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron bubbles with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i nightshade)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type nightshade1 nightshade))\n\t\t(not (at nightshade1 ?r))\n\t\t(not (in nightshade1 ?c))\n\t\t(not (accessible nightshade1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The nightshade mingles with the liquid with a pop producing the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,nightshade1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,nightshade1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,nightshade1,ROOM) :- turn(TURN), at_t(TURN,nightshade1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,nightshade1,cauldron1) :- turn(TURN), in_t(TURN,nightshade1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Floorboard potion\nIngredients: Ectoplasm, eye of newt, peach, spider egg.\n1. Pour ectoplasm into your cauldron.\n2. Add the peach into your cauldron.\n3. Wiggle a zulpo's wand over your cauldron.\n4. Use a fairy wand over your cauldron.\n5. Add the eye of newt into your cauldron.\n6. Put the spider egg into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spideregg1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "fairywand1"
        ],
        [
          "take",
          "zulpowand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "fairywand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "take",
          "eyeofnewt1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "zulpowand1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "put",
          "eyeofnewt1",
          "cauldron1"
        ],
        [
          "put",
          "spideregg1",
          "cauldron1"
        ],
        [
          "go",
          "conservatory1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "go cellar",
        "take spider egg",
        "go hallway",
        "go magic workshop",
        "take fairy wand",
        "take zulpo's wand",
        "go kitchen",
        "wave cauldron fairy wand",
        "go pantry",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "open ice box",
        "take peach",
        "take eye of newt",
        "go kitchen",
        "wave cauldron zulpo's wand",
        "put peach in cauldron",
        "put eye of newt in cauldron",
        "put spider egg in cauldron",
        "go conservatory"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ectoplasm1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in ectoplasm1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type ectoplasm1 ectoplasm))\n\t\t(not (at ectoplasm1 ?r))\n\t\t(not (in ectoplasm1 ?c))\n\t\t(not (accessible ectoplasm1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i peach))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The peach combines with the ectoplasm with a swirling pattern creating a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid1)\n\t\t(zulponated ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2 ?r)\n\t\t(in liquid2 ?c)\n\t\t(accessible liquid2)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the zulponated cauldron rectangulates with a pop.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), zulponated_t(TURN,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(glittery ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the glittery cauldron churgulates with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), glittery_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i eyeofnewt)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i eyeofnewt))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The eye of newt absorbs into the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,eyeofnewt1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,eyeofnewt1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,eyeofnewt1,ROOM) :- turn(TURN), at_t(TURN,eyeofnewt1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,eyeofnewt1,cauldron1) :- turn(TURN), in_t(TURN,eyeofnewt1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spideregg)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type spideregg1 spideregg))\n\t\t(not (at spideregg1 ?r))\n\t\t(not (in spideregg1 ?c))\n\t\t(not (accessible spideregg1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The spider egg mingles with the liquid with a gloopy sound leaving the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spideregg1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,spideregg1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,spideregg1,ROOM) :- turn(TURN), at_t(TURN,spideregg1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,spideregg1,cauldron1) :- turn(TURN), in_t(TURN,spideregg1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,That odd potion\nIngredients: Ectoplasm, spider, banana, green beetle.\n1. Pour ectoplasm into your cauldron.\n2. Put the spider into your cauldron.\n3. Put the banana into your cauldron.\n4. Use a fairy wand on your cauldron.\n5. Wiggle a ice wand at your cauldron.\n6. Add the green beetle into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spider1"
        ],
        [
          "take",
          "greenbeetle1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "fairywand1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "spider1",
          "cauldron1"
        ],
        [
          "put",
          "greenbeetle1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "banana1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "fairywand1"
        ],
        [
          "put",
          "banana1",
          "cauldron1"
        ],
        [
          "put",
          "banana1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "go cellar",
        "take spider",
        "take green beetle",
        "go hallway",
        "go magic workshop",
        "take fairy wand",
        "take ice wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "go kitchen",
        "wave cauldron ice wand",
        "put spider in cauldron",
        "put green beetle in cauldron",
        "go pantry",
        "open ice box",
        "take banana",
        "go kitchen",
        "wave cauldron fairy wand",
        "put banana in cauldron",
        "put banana in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ectoplasm1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spider)\n\t\t(in ?i ?c)\n\t\t(in ectoplasm1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type ectoplasm1 ectoplasm))\n\t\t(not (at ectoplasm1 ?r))\n\t\t(not (in ectoplasm1 ?c))\n\t\t(not (accessible ectoplasm1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spider))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The spider mingles with the ectoplasm with a puff of vapor producing a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,spider1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), in_t(TURN,spider1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,spider1,ROOM) :- turn(TURN), at_t(TURN,spider1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,spider1,cauldron1) :- turn(TURN), in_t(TURN,spider1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i banana)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i banana))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The banana combines with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,banana1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,banana1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,banana1,ROOM) :- turn(TURN), at_t(TURN,banana1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,banana1,cauldron1) :- turn(TURN), in_t(TURN,banana1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(glittery ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the glittery cauldron sloshes with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), glittery_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron undulates with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i greenbeetle)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type greenbeetle1 greenbeetle))\n\t\t(not (at greenbeetle1 ?r))\n\t\t(not (in greenbeetle1 ?c))\n\t\t(not (accessible greenbeetle1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The green beetle combines with the liquid with a phase shift leaving the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,greenbeetle1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,greenbeetle1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,greenbeetle1,ROOM) :- turn(TURN), at_t(TURN,greenbeetle1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,greenbeetle1,cauldron1) :- turn(TURN), in_t(TURN,greenbeetle1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Absolutely incredulous potion\nIngredients: Water, red beetle, eye of newt, plonkle crystal.\n1. Pour water into your cauldron.\n2. Drop the eye of newt into your cauldron.\n3. Swirl a ice wand over your cauldron.\n4. Add the red beetle into your cauldron.\n5. Add the plonkle crystal into your cauldron.\n6. Swirl a fire wand at your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 24,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "waterbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "plonklecrystal1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "redbeetle1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "waterbucket1",
          "cauldron1"
        ],
        [
          "put",
          "redbeetle1",
          "cauldron1"
        ],
        [
          "put",
          "plonklecrystal1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "take",
          "eyeofnewt1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "eyeofnewt1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "stir",
          "water1",
          "kitchen1floor1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of water",
        "go storage room",
        "take plonkle crystal",
        "go cellar",
        "take red beetle",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "take ice wand",
        "go kitchen",
        "dump bucket of water cauldron",
        "put red beetle in cauldron",
        "put plonkle crystal in cauldron",
        "go pantry",
        "take eye of newt",
        "go kitchen",
        "wave cauldron ice wand",
        "put eye of newt in cauldron",
        "go pantry",
        "go kitchen",
        "wave cauldron fire wand",
        "stir water floor"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at water1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i eyeofnewt)\n\t\t(in ?i ?c)\n\t\t(in water1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type water1 water))\n\t\t(not (at water1 ?r))\n\t\t(not (in water1 ?c))\n\t\t(not (accessible water1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i eyeofnewt))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The eye of newt combines with the water with a phase shift leaving a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,water1,ROOM), at_t(TURN,eyeofnewt1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,water1,cauldron1), in_t(TURN,eyeofnewt1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,water1,ROOM) :- turn(TURN), at_t(TURN,water1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,water1,cauldron1) :- turn(TURN), in_t(TURN,water1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,water1) :- turn(TURN), accessible_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,eyeofnewt1,ROOM) :- turn(TURN), at_t(TURN,eyeofnewt1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,eyeofnewt1,cauldron1) :- turn(TURN), in_t(TURN,eyeofnewt1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid1)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2 ?r)\n\t\t(in liquid2 ?c)\n\t\t(accessible liquid2)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron sloshes with a phase shift.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i redbeetle)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i redbeetle))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The red beetle mingles with the liquid in the cauldron with a swirling pattern.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,redbeetle1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,redbeetle1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,redbeetle1,ROOM) :- turn(TURN), at_t(TURN,redbeetle1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,redbeetle1,cauldron1) :- turn(TURN), in_t(TURN,redbeetle1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i plonklecrystal)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i plonklecrystal))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The plonkle crystal mingles with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,plonklecrystal1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,plonklecrystal1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,plonklecrystal1,ROOM) :- turn(TURN), at_t(TURN,plonklecrystal1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,plonklecrystal1,cauldron1) :- turn(TURN), in_t(TURN,plonklecrystal1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l plonklecrystal)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron bubbles with a puff of vaporleaving the finished potion.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid4,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), hot_t(TURN,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Jingle potion\nIngredients: Ectoplasm, banana, sandwich, peach.\n1. Pour ectoplasm into your cauldron.\n2. Agitate the liquid using a borpulus.\n3. Swirl a fire wand on your cauldron.\n4. Add the sandwich into your cauldron.\n5. Put the peach into your cauldron.\n6. Drop the banana into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 24,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "banana1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "borpulus1"
        ],
        [
          "put",
          "banana1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "take",
          "sandwich1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take borpulus",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "open ice box",
        "take banana",
        "go kitchen",
        "stir ectoplasm borpulus",
        "put banana in cauldron",
        "go pantry",
        "take sandwich",
        "take peach",
        "go kitchen",
        "wave cauldron fire wand",
        "put peach in cauldron",
        "put sandwich in cauldron",
        "go pantry"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm rectangulates with a phase shiftcreating a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), borpulusstirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,ectoplasm1) :- turn(TURN), borpulusstirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid1)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2 ?r)\n\t\t(in liquid2 ?c)\n\t\t(accessible liquid2)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron whistles with a pop.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), hot_t(TURN,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i sandwich)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i sandwich))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The sandwich combines with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,sandwich1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,sandwich1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,sandwich1,ROOM) :- turn(TURN), at_t(TURN,sandwich1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,sandwich1,cauldron1) :- turn(TURN), in_t(TURN,sandwich1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i peach))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The peach mingles with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i banana)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type banana1 banana))\n\t\t(not (at banana1 ?r))\n\t\t(not (in banana1 ?c))\n\t\t(not (accessible banana1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The banana combines with the liquid with a pop creating the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,banana1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,banana1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,banana1,ROOM) :- turn(TURN), at_t(TURN,banana1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,banana1,cauldron1) :- turn(TURN), in_t(TURN,banana1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Granny Weatherwax's potion\nIngredients: Ectoplasm, apple, plunkle crystal, prickly pear.\n1. Pour ectoplasm into your cauldron.\n2. Drop the prickly pear into your cauldron.\n3. Add the apple into your cauldron.\n4. Put the plunkle crystal into your cauldron.\n5. Wave a fairy wand over your cauldron.\n6. Wiggle a zulpo's wand on your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 26,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "plunklecrystal1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "zulpowand1"
        ],
        [
          "take",
          "fairywand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "conservatory1"
        ],
        [
          "take",
          "pricklypear1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "fairywand1"
        ],
        [
          "put",
          "plunklecrystal1",
          "cauldron1"
        ],
        [
          "put",
          "pricklypear1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "apple1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "zulpowand1"
        ],
        [
          "put",
          "apple1",
          "cauldron1"
        ],
        [
          "go",
          "conservatory1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take plunkle crystal",
        "go hallway",
        "go magic workshop",
        "take zulpo's wand",
        "take fairy wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go conservatory",
        "take prickly pear",
        "go hallway",
        "go magic workshop",
        "go kitchen",
        "wave cauldron fairy wand",
        "put plunkle crystal in cauldron",
        "put prickly pear in cauldron",
        "go pantry",
        "open ice box",
        "take apple",
        "go kitchen",
        "wave cauldron zulpo's wand",
        "put apple in cauldron",
        "go conservatory"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ectoplasm1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i pricklypear)\n\t\t(in ?i ?c)\n\t\t(in ectoplasm1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type ectoplasm1 ectoplasm))\n\t\t(not (at ectoplasm1 ?r))\n\t\t(not (in ectoplasm1 ?c))\n\t\t(not (accessible ectoplasm1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i pricklypear))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The prickly pear combines with the ectoplasm with a gloopy sound producing a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,pricklypear1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), in_t(TURN,pricklypear1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,pricklypear1,ROOM) :- turn(TURN), at_t(TURN,pricklypear1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,pricklypear1,cauldron1) :- turn(TURN), in_t(TURN,pricklypear1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i apple)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i apple))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The apple combines with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,apple1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,apple1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,apple1,ROOM) :- turn(TURN), at_t(TURN,apple1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,apple1,cauldron1) :- turn(TURN), in_t(TURN,apple1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i plunklecrystal)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i plunklecrystal))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The plunkle crystal mingles with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,plunklecrystal1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,plunklecrystal1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,plunklecrystal1,ROOM) :- turn(TURN), at_t(TURN,plunklecrystal1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,plunklecrystal1,cauldron1) :- turn(TURN), in_t(TURN,plunklecrystal1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(glittery ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the glittery cauldron rectangulates with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), glittery_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l )\n\t\t(zulponated ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the zulponated cauldron swirls with a gloopy soundcreating the finished potion.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid4,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), zulponated_t(TURN,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Kawummio potion\nIngredients: Ectoplasm, plinkle crystal, eye of newt, nightshade.\n1. Pour ectoplasm into your cauldron.\n2. Agitate the liquid using a borpulus.\n3. Drop the nightshade into your cauldron.\n4. Put the plinkle crystal into your cauldron.\n5. Put the eye of newt into your cauldron.\n6. Use a fire wand on your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 23,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "nightshade1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "take",
          "plinklecrystal1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "take",
          "eyeofnewt1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "put",
          "nightshade1",
          "cauldron1"
        ],
        [
          "put",
          "plinklecrystal1",
          "cauldron1"
        ],
        [
          "put",
          "eyeofnewt1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "borpulus1"
        ],
        [
          "wave",
          "cauldron1",
          "counter1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take nightshade",
        "take bucket of ectoplasm",
        "go storage room",
        "take borpulus",
        "take plinkle crystal",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "go kitchen",
        "wave cauldron fire wand",
        "go pantry",
        "take eye of newt",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "put nightshade in cauldron",
        "put plinkle crystal in cauldron",
        "put eye of newt in cauldron",
        "go pantry",
        "go kitchen",
        "stir ectoplasm borpulus",
        "wave cauldron counter"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm dances with a phase shiftleaving a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), borpulusstirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,ectoplasm1) :- turn(TURN), borpulusstirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i nightshade)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i nightshade))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The nightshade combines with the liquid in the cauldron with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,nightshade1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,nightshade1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,nightshade1,ROOM) :- turn(TURN), at_t(TURN,nightshade1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,nightshade1,cauldron1) :- turn(TURN), in_t(TURN,nightshade1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i plinklecrystal)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i plinklecrystal))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The plinkle crystal combines with the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,plinklecrystal1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,plinklecrystal1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,plinklecrystal1,ROOM) :- turn(TURN), at_t(TURN,plinklecrystal1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,plinklecrystal1,cauldron1) :- turn(TURN), in_t(TURN,plinklecrystal1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i eyeofnewt)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i eyeofnewt))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The eye of newt mingles with the liquid in the cauldron with a swirling pattern.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,eyeofnewt1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,eyeofnewt1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,eyeofnewt1,ROOM) :- turn(TURN), at_t(TURN,eyeofnewt1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,eyeofnewt1,cauldron1) :- turn(TURN), in_t(TURN,eyeofnewt1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l eyeofnewt)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron sloshes with a gloopy soundcreating the finished potion.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid4,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), hot_t(TURN,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Hungro's potion\nIngredients: Ectoplasm, spider, prickly pear, peach.\n1. Pour ectoplasm into your cauldron.\n2. Mix the liquid using a borpulus.\n3. Add the peach into your cauldron.\n4. Add the spider into your cauldron.\n5. Swirl a fire wand on your cauldron.\n6. Put the prickly pear into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 27,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "borpulus1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spider1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "borpulus1"
        ],
        [
          "go",
          "conservatory1"
        ],
        [
          "take",
          "pricklypear1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "put",
          "pricklypear1",
          "cauldron1"
        ],
        [
          "put",
          "spider1",
          "cauldron1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take borpulus",
        "go cellar",
        "take spider",
        "go hallway",
        "go magic workshop",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "go pantry",
        "open ice box",
        "take peach",
        "go kitchen",
        "stir ectoplasm borpulus",
        "go conservatory",
        "take prickly pear",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "go kitchen",
        "wave cauldron fire wand",
        "put prickly pear in cauldron",
        "put spider in cauldron",
        "put peach in cauldron",
        "put peach in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(borpulusstirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (borpulusstirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm sloshes with a popleaving a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), borpulusstirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nborpulusstirred_t(TURN+1,ectoplasm1) :- turn(TURN), borpulusstirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i peach))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The peach absorbs into the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spider)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spider))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The spider combines with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spider1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,spider1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,spider1,ROOM) :- turn(TURN), at_t(TURN,spider1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,spider1,cauldron1) :- turn(TURN), in_t(TURN,spider1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron sloshes with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), hot_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i pricklypear)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type pricklypear1 pricklypear))\n\t\t(not (at pricklypear1 ?r))\n\t\t(not (in pricklypear1 ?c))\n\t\t(not (accessible pricklypear1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The prickly pear combines with the liquid with a pop leaving the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,pricklypear1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,pricklypear1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,pricklypear1,ROOM) :- turn(TURN), at_t(TURN,pricklypear1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,pricklypear1,cauldron1) :- turn(TURN), in_t(TURN,pricklypear1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Satisfying potion\nIngredients: Water, orange, spider, sandwich.\n1. Pour water into your cauldron.\n2. Drop the sandwich into your cauldron.\n3. Drop the spider into your cauldron.\n4. Use a ice wand at your cauldron.\n5. Wave a fairy wand over your cauldron.\n6. Add the orange into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "waterbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spider1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "take",
          "fairywand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "fairywand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "sandwich1"
        ],
        [
          "take",
          "orange1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ],
        [
          "put",
          "orange1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "waterbucket1",
          "cauldron1"
        ],
        [
          "put",
          "spider1",
          "cauldron1"
        ],
        [
          "put",
          "orange1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of water",
        "go storage room",
        "go cellar",
        "take spider",
        "go hallway",
        "go magic workshop",
        "take ice wand",
        "take fairy wand",
        "go kitchen",
        "wave cauldron fairy wand",
        "go pantry",
        "open ice box",
        "take sandwich",
        "take orange",
        "go kitchen",
        "wave cauldron ice wand",
        "put sandwich in cauldron",
        "put orange in cauldron",
        "go pantry",
        "go kitchen",
        "dump bucket of water cauldron",
        "put spider in cauldron",
        "put orange in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at water1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i sandwich)\n\t\t(in ?i ?c)\n\t\t(in water1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type water1 water))\n\t\t(not (at water1 ?r))\n\t\t(not (in water1 ?c))\n\t\t(not (accessible water1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i sandwich))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The sandwich mingles with the water with a puff of vapor leaving a liquid in the cauldron.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,water1,ROOM), at_t(TURN,sandwich1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,water1,cauldron1), in_t(TURN,sandwich1,cauldron1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,water1,ROOM) :- turn(TURN), at_t(TURN,water1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,water1,cauldron1) :- turn(TURN), in_t(TURN,water1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,water1) :- turn(TURN), accessible_t(TURN,water1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nat_t(TURN+1,sandwich1,ROOM) :- turn(TURN), at_t(TURN,sandwich1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,sandwich1,cauldron1) :- turn(TURN), in_t(TURN,sandwich1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spider)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spider))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The spider combines with the liquid in the cauldron with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spider1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,spider1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,spider1,ROOM) :- turn(TURN), at_t(TURN,spider1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,spider1,cauldron1) :- turn(TURN), in_t(TURN,spider1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid2)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3 ?r)\n\t\t(in liquid3 ?c)\n\t\t(accessible liquid3)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron churgulates with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid2,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), cold_t(TURN,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid3)\n\t\t(glittery ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4 ?r)\n\t\t(in liquid4 ?c)\n\t\t(accessible liquid4)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the glittery cauldron dances with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid3,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), glittery_t(TURN,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i orange)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type orange1 orange))\n\t\t(not (at orange1 ?r))\n\t\t(not (in orange1 ?c))\n\t\t(not (accessible orange1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The orange absorbs into the liquid with a phase shift creating the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,orange1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,orange1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,orange1,ROOM) :- turn(TURN), at_t(TURN,orange1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,orange1,cauldron1) :- turn(TURN), in_t(TURN,orange1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Holperdinger potion\nIngredients: Ectoplasm, sandwich, green beetle, prickly pear.\n1. Pour ectoplasm into your cauldron.\n2. Agitate the liquid using a ladle.\n3. Use a fire wand at your cauldron.\n4. Add the green beetle into your cauldron.\n5. Put the sandwich into your cauldron.\n6. Put the prickly pear into your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 27,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "ladle1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "greenbeetle1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "firewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "put",
          "greenbeetle1",
          "cauldron1"
        ],
        [
          "go",
          "conservatory1"
        ],
        [
          "take",
          "pricklypear1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "firewand1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "sandwich1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "ladle1"
        ],
        [
          "put",
          "pricklypear1",
          "cauldron1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ],
        [
          "put",
          "sandwich1",
          "cauldron1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "go storage room",
        "take ladle",
        "go cellar",
        "take green beetle",
        "go hallway",
        "go magic workshop",
        "take fire wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "put green beetle in cauldron",
        "go conservatory",
        "take prickly pear",
        "go hallway",
        "go magic workshop",
        "go kitchen",
        "wave cauldron fire wand",
        "go pantry",
        "open ice box",
        "take sandwich",
        "go kitchen",
        "stir ectoplasm ladle",
        "put prickly pear in cauldron",
        "put sandwich in cauldron",
        "put sandwich in cauldron"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(ladlestirred ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (ladlestirred ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm swirls with a phase shiftcreating a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), ladlestirred_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nladlestirred_t(TURN+1,ectoplasm1) :- turn(TURN), ladlestirred_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l liquid1)\n\t\t(hot ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2 ?r)\n\t\t(in liquid2 ?c)\n\t\t(accessible liquid2)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the hot cauldron rectangulates with a puff of vapor.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), hot_t(TURN,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i greenbeetle)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i greenbeetle))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The green beetle mingles with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,greenbeetle1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,greenbeetle1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,greenbeetle1,ROOM) :- turn(TURN), at_t(TURN,greenbeetle1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,greenbeetle1,cauldron1) :- turn(TURN), in_t(TURN,greenbeetle1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i sandwich)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i sandwich))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The sandwich combines with the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,sandwich1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,sandwich1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,sandwich1,ROOM) :- turn(TURN), at_t(TURN,sandwich1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,sandwich1,cauldron1) :- turn(TURN), in_t(TURN,sandwich1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i pricklypear)\n\t\t(in ?i ?c)\n\t\t(in liquid4 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type pricklypear1 pricklypear))\n\t\t(not (at pricklypear1 ?r))\n\t\t(not (in pricklypear1 ?c))\n\t\t(not (accessible pricklypear1))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The prickly pear absorbs into the liquid with a gloopy sound producing the finished potion in the cauldron.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,pricklypear1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), in_t(TURN,pricklypear1,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nat_t(TURN+1,pricklypear1,ROOM) :- turn(TURN), at_t(TURN,pricklypear1,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,pricklypear1,cauldron1) :- turn(TURN), in_t(TURN,pricklypear1,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    },
    {
      "adventure_type": "potion_brewing",
      "goal": "Brew the potion.",
      "initial_state": [
        "type(kitchen1floor1,floor)",
        "type(pantry1floor1,floor)",
        "type(hallway1floor1,floor)",
        "type(broomcloset1floor1,floor)",
        "type(bedroom1floor1,floor)",
        "type(storage1floor1,floor)",
        "type(readingroom1floor1,floor)",
        "type(workshop1floor1,floor)",
        "type(workshop1ceiling1,ceiling)",
        "type(cellar1floor1,floor)",
        "type(conservatory1floor1,floor)",
        "type(garden1floor1,floor)",
        "type(outhouse1floor1,floor)",
        "type(player1,player)",
        "type(table1,table)",
        "type(sidetable1,sidetable)",
        "type(counter1,counter)",
        "type(icebox1,icebox)",
        "type(cupboard1,cupboard)",
        "type(wardrobe1,wardrobe)",
        "type(shelf1,shelf)",
        "type(chair1,chair)",
        "type(bed1,bed)",
        "type(couch1,couch)",
        "type(broom1,broom)",
        "type(mop1,mop)",
        "type(sandwich1,sandwich)",
        "type(apple1,apple)",
        "type(banana1,banana)",
        "type(orange1,orange)",
        "type(peach1,peach)",
        "type(plate1,plate)",
        "type(book1,book)",
        "type(pillow1,pillow)",
        "type(toad1,toad)",
        "type(greenbeetle1,greenbeetle)",
        "type(redbeetle1,redbeetle)",
        "type(eyeofnewt1,eyeofnewt)",
        "type(plinklecrystal1,plinklecrystal)",
        "type(plonklecrystal1,plonklecrystal)",
        "type(plunklecrystal1,plunklecrystal)",
        "type(spider1,spider)",
        "type(spiderweb1,spiderweb)",
        "type(spideregg1,spideregg)",
        "type(lilyofthevalley1,lilyofthevalley)",
        "type(nightshade1,nightshade)",
        "type(pricklypear1,pricklypear)",
        "type(waterbucket1,waterbucket)",
        "type(water1,water)",
        "type(plasmbucket1,plasmbucket)",
        "type(ectoplasm1,ectoplasm)",
        "type(cauldron1,cauldron)",
        "type(ladle1,ladle)",
        "type(whisk1,whisk)",
        "type(spoon1,spoon)",
        "type(borpulus1,borpulus)",
        "type(firewand1,firewand)",
        "type(icewand1,icewand)",
        "type(fairywand1,fairywand)",
        "type(zulpowand1,zulpowand)",
        "type(liquid1,liquid)",
        "type(potion1,potion)",
        "type(potionrecipe1,potionrecipe)",
        "room(kitchen1,kitchen)",
        "room(pantry1,pantry)",
        "room(hallway1,hallway)",
        "room(broomcloset1,broomcloset)",
        "room(bedroom1,bedroom)",
        "room(storage1,storage)",
        "room(readingroom1,readingroom)",
        "room(workshop1,workshop)",
        "room(cellar1,cellar)",
        "room(conservatory1,conservatory)",
        "room(garden1,garden)",
        "room(outhouse1,outhouse)",
        "at(kitchen1floor1,kitchen1)",
        "at(pantry1floor1,pantry1)",
        "at(hallway1floor1,hallway1)",
        "at(broomcloset1floor1,broomcloset1)",
        "at(bedroom1floor1,bedroom1)",
        "at(storage1floor1,storage1)",
        "at(readingroom1floor1,readingroom1)",
        "at(workshop1floor1,workshop1)",
        "at(workshop1ceiling1,workshop1)",
        "at(cellar1floor1,cellar1)",
        "at(conservatory1floor1,conservatory1)",
        "at(garden1floor1,garden1)",
        "at(outhouse1floor1,outhouse1)",
        "at(player1,bedroom1)",
        "at(potionrecipe1,bedroom1)",
        "at(table1,readingroom1)",
        "at(sidetable1,readingroom1)",
        "at(counter1,kitchen1)",
        "at(icebox1,pantry1)",
        "at(cupboard1,kitchen1)",
        "at(wardrobe1,bedroom1)",
        "at(shelf1,readingroom1)",
        "at(chair1,readingroom1)",
        "at(bed1,bedroom1)",
        "at(couch1,readingroom1)",
        "at(broom1,broomcloset1)",
        "at(mop1,broomcloset1)",
        "at(sandwich1,pantry1)",
        "at(apple1,pantry1)",
        "at(banana1,pantry1)",
        "at(orange1,pantry1)",
        "at(peach1,pantry1)",
        "at(plate1,kitchen1)",
        "at(book1,bedroom1)",
        "at(pillow1,bedroom1)",
        "at(toad1,pantry1)",
        "at(greenbeetle1,cellar1)",
        "at(redbeetle1,cellar1)",
        "at(eyeofnewt1,pantry1)",
        "at(plinklecrystal1,storage1)",
        "at(plonklecrystal1,storage1)",
        "at(plunklecrystal1,storage1)",
        "at(spider1,cellar1)",
        "at(spiderweb1,storage1)",
        "at(spideregg1,cellar1)",
        "at(lilyofthevalley1,garden1)",
        "at(nightshade1,garden1)",
        "at(pricklypear1,conservatory1)",
        "at(waterbucket1,garden1)",
        "at(plasmbucket1,garden1)",
        "at(cauldron1,kitchen1)",
        "at(ladle1,storage1)",
        "at(whisk1,storage1)",
        "at(spoon1,storage1)",
        "at(borpulus1,storage1)",
        "at(firewand1,workshop1)",
        "at(icewand1,workshop1)",
        "at(fairywand1,workshop1)",
        "at(zulpowand1,workshop1)",
        "support(kitchen1floor1)",
        "support(pantry1floor1)",
        "support(hallway1floor1)",
        "support(broomcloset1floor1)",
        "support(bedroom1floor1)",
        "support(storage1floor1)",
        "support(readingroom1floor1)",
        "support(workshop1floor1)",
        "support(workshop1ceiling1)",
        "support(cellar1floor1)",
        "support(conservatory1floor1)",
        "support(garden1floor1)",
        "support(outhouse1floor1)",
        "support(table1)",
        "support(sidetable1)",
        "support(counter1)",
        "support(shelf1)",
        "support(chair1)",
        "support(bed1)",
        "support(couch1)",
        "on(zulpowand1,workshop1ceiling1)",
        "on(fairywand1,workshop1ceiling1)",
        "on(icewand1,workshop1ceiling1)",
        "on(firewand1,workshop1ceiling1)",
        "on(borpulus1,storage1floor1)",
        "on(spoon1,storage1floor1)",
        "on(whisk1,storage1floor1)",
        "on(ladle1,storage1floor1)",
        "on(plasmbucket1,garden1floor1)",
        "on(waterbucket1,garden1floor1)",
        "on(pricklypear1,conservatory1floor1)",
        "on(nightshade1,garden1floor1)",
        "on(lilyofthevalley1,garden1floor1)",
        "on(spideregg1,cellar1floor1)",
        "on(spiderweb1,storage1floor1)",
        "on(spider1,cellar1floor1)",
        "on(plunklecrystal1,storage1floor1)",
        "on(plonklecrystal1,storage1floor1)",
        "on(plinklecrystal1,storage1floor1)",
        "on(eyeofnewt1,pantry1floor1)",
        "on(redbeetle1,cellar1floor1)",
        "on(greenbeetle1,cellar1floor1)",
        "on(pillow1,bedroom1floor1)",
        "on(book1,bed1)",
        "on(plate1,kitchen1floor1)",
        "on(mop1,broomcloset1floor1)",
        "on(broom1,broomcloset1floor1)",
        "container(icebox1)",
        "container(cupboard1)",
        "container(wardrobe1)",
        "container(cauldron1)",
        "in(toad1,icebox1)",
        "in(peach1,icebox1)",
        "in(orange1,icebox1)",
        "in(banana1,icebox1)",
        "in(apple1,icebox1)",
        "in(sandwich1,icebox1)",
        "exit(kitchen1,pantry1)",
        "exit(kitchen1,conservatory1)",
        "exit(pantry1,kitchen1)",
        "exit(hallway1,readingroom1)",
        "exit(hallway1,broomcloset1)",
        "exit(hallway1,bedroom1)",
        "exit(hallway1,workshop1)",
        "exit(broomcloset1,hallway1)",
        "exit(bedroom1,readingroom1)",
        "exit(storage1,hallway1)",
        "exit(storage1,cellar1)",
        "exit(readingroom1,conservatory1)",
        "exit(readingroom1,garden1)",
        "exit(workshop1,kitchen1)",
        "exit(workshop1,bedroom1)",
        "exit(cellar1,hallway1)",
        "exit(conservatory1,hallway1)",
        "exit(garden1,storage1)",
        "exit(garden1,outhouse1)",
        "exit(outhouse1,garden1)",
        "receptacle(table1)",
        "receptacle(sidetable1)",
        "receptacle(counter1)",
        "receptacle(icebox1)",
        "receptacle(cupboard1)",
        "receptacle(wardrobe1)",
        "receptacle(shelf1)",
        "receptacle(chair1)",
        "receptacle(bed1)",
        "receptacle(couch1)",
        "receptacle(cauldron1)",
        "openable(icebox1)",
        "openable(cupboard1)",
        "openable(wardrobe1)",
        "closed(icebox1)",
        "closed(cupboard1)",
        "closed(wardrobe1)",
        "takeable(broom1)",
        "takeable(mop1)",
        "takeable(sandwich1)",
        "takeable(apple1)",
        "takeable(banana1)",
        "takeable(orange1)",
        "takeable(peach1)",
        "takeable(plate1)",
        "takeable(book1)",
        "takeable(pillow1)",
        "takeable(toad1)",
        "takeable(greenbeetle1)",
        "takeable(redbeetle1)",
        "takeable(eyeofnewt1)",
        "takeable(plinklecrystal1)",
        "takeable(plonklecrystal1)",
        "takeable(plunklecrystal1)",
        "takeable(spider1)",
        "takeable(spiderweb1)",
        "takeable(spideregg1)",
        "takeable(lilyofthevalley1)",
        "takeable(nightshade1)",
        "takeable(pricklypear1)",
        "takeable(waterbucket1)",
        "takeable(plasmbucket1)",
        "takeable(ladle1)",
        "takeable(whisk1)",
        "takeable(spoon1)",
        "takeable(borpulus1)",
        "takeable(firewand1)",
        "takeable(icewand1)",
        "takeable(fairywand1)",
        "takeable(zulpowand1)",
        "movable(broom1)",
        "movable(mop1)",
        "movable(sandwich1)",
        "movable(apple1)",
        "movable(banana1)",
        "movable(orange1)",
        "movable(peach1)",
        "movable(plate1)",
        "movable(book1)",
        "movable(pillow1)",
        "movable(toad1)",
        "movable(greenbeetle1)",
        "movable(redbeetle1)",
        "movable(eyeofnewt1)",
        "movable(plinklecrystal1)",
        "movable(plonklecrystal1)",
        "movable(plunklecrystal1)",
        "movable(spider1)",
        "movable(spiderweb1)",
        "movable(spideregg1)",
        "movable(lilyofthevalley1)",
        "movable(nightshade1)",
        "movable(pricklypear1)",
        "movable(waterbucket1)",
        "movable(plasmbucket1)",
        "movable(ladle1)",
        "movable(whisk1)",
        "movable(spoon1)",
        "movable(borpulus1)",
        "movable(firewand1)",
        "movable(icewand1)",
        "movable(fairywand1)",
        "movable(zulpowand1)",
        "needs_support(broom1)",
        "needs_support(mop1)",
        "needs_support(sandwich1)",
        "needs_support(apple1)",
        "needs_support(banana1)",
        "needs_support(orange1)",
        "needs_support(peach1)",
        "needs_support(plate1)",
        "needs_support(book1)",
        "needs_support(pillow1)",
        "needs_support(toad1)",
        "needs_support(greenbeetle1)",
        "needs_support(redbeetle1)",
        "needs_support(eyeofnewt1)",
        "needs_support(plinklecrystal1)",
        "needs_support(plonklecrystal1)",
        "needs_support(plunklecrystal1)",
        "needs_support(spider1)",
        "needs_support(spiderweb1)",
        "needs_support(spideregg1)",
        "needs_support(lilyofthevalley1)",
        "needs_support(nightshade1)",
        "needs_support(pricklypear1)",
        "needs_support(waterbucket1)",
        "needs_support(water1)",
        "needs_support(plasmbucket1)",
        "needs_support(ectoplasm1)",
        "needs_support(ladle1)",
        "needs_support(whisk1)",
        "needs_support(spoon1)",
        "needs_support(borpulus1)",
        "needs_support(firewand1)",
        "needs_support(icewand1)",
        "needs_support(fairywand1)",
        "needs_support(zulpowand1)",
        "ingredient(sandwich1)",
        "ingredient(apple1)",
        "ingredient(banana1)",
        "ingredient(orange1)",
        "ingredient(peach1)",
        "ingredient(greenbeetle1)",
        "ingredient(redbeetle1)",
        "ingredient(eyeofnewt1)",
        "ingredient(plinklecrystal1)",
        "ingredient(plonklecrystal1)",
        "ingredient(plunklecrystal1)",
        "ingredient(spider1)",
        "ingredient(spiderweb1)",
        "ingredient(spideregg1)",
        "ingredient(lilyofthevalley1)",
        "ingredient(nightshade1)",
        "ingredient(pricklypear1)",
        "ingredient(waterbucket1)",
        "ingredient(water1)",
        "ingredient(plasmbucket1)",
        "ingredient(ectoplasm1)",
        "bucket(waterbucket1)",
        "bucket(plasmbucket1)",
        "tool(ladle1)",
        "tool(whisk1)",
        "tool(spoon1)",
        "tool(borpulus1)",
        "tool(firewand1)",
        "tool(icewand1)",
        "tool(fairywand1)",
        "tool(zulpowand1)",
        "readable(potionrecipe1)",
        "text(potionrecipe1,Kawummio potion\nIngredients: Ectoplasm, peach, lily of the valley, spider.\n1. Pour ectoplasm into your cauldron.\n2. Mix the liquid using a whisk.\n3. Put the lily of the valley into your cauldron.\n4. Drop the peach into your cauldron.\n5. Put the spider into your cauldron.\n6. Swirl a ice wand over your cauldron.\n)"
      ],
      "goal_state": [
        "at(potion1,kitchen1)"
      ],
      "optimal_turns": 25,
      "optimal_solution": [
        [
          "go",
          "readingroom1"
        ],
        [
          "go",
          "garden1"
        ],
        [
          "take",
          "plasmbucket1"
        ],
        [
          "take",
          "lilyofthevalley1"
        ],
        [
          "go",
          "storage1"
        ],
        [
          "take",
          "whisk1"
        ],
        [
          "go",
          "cellar1"
        ],
        [
          "take",
          "spider1"
        ],
        [
          "go",
          "hallway1"
        ],
        [
          "go",
          "workshop1"
        ],
        [
          "take",
          "icewand1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "dump",
          "plasmbucket1",
          "cauldron1"
        ],
        [
          "put",
          "spider1",
          "cauldron1"
        ],
        [
          "put",
          "lilyofthevalley1",
          "cauldron1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "open",
          "icebox1"
        ],
        [
          "take",
          "peach1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "stir",
          "ectoplasm1",
          "whisk1"
        ],
        [
          "go",
          "pantry1"
        ],
        [
          "go",
          "kitchen1"
        ],
        [
          "wave",
          "cauldron1",
          "icewand1"
        ],
        [
          "put",
          "peach1",
          "cauldron1"
        ],
        [
          "stir",
          "lilyofthevalley1",
          "peach1"
        ]
      ],
      "optimal_commands": [
        "go reading room",
        "go garden",
        "take bucket of ectoplasm",
        "take lily of the valley",
        "go storage room",
        "take whisk",
        "go cellar",
        "take spider",
        "go hallway",
        "go magic workshop",
        "take ice wand",
        "go kitchen",
        "dump bucket of ectoplasm cauldron",
        "put spider in cauldron",
        "put lily of the valley in cauldron",
        "go pantry",
        "open ice box",
        "take peach",
        "go kitchen",
        "stir ectoplasm whisk",
        "go pantry",
        "go kitchen",
        "wave cauldron ice wand",
        "put peach in cauldron",
        "stir lily of the valley peach"
      ],
      "action_definitions": [
        "witch_actions_core.json"
      ],
      "room_definitions": [
        "witch_rooms.json"
      ],
      "entity_definitions": [
        "witch_entities.json"
      ],
      "domain_definitions": ["witch_domain_core.json"],
      "event_definitions": [
        {
          "type_name": "workshop_antigravity_objects",
          "pddl": "(:event ANTIGRAVITY_OBJECTS\n    :parameters (?e - entity ?h - receptacle ?c - ceiling ?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?e ?r)\n        (at ?p ?r)\n        (not (type ?h ceiling))\n        (or\n            (on ?e ?h)\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            )\n        (type ?c ceiling)\n        )\n    :effect (and\n        (when\n            (and\n                (in ?e ?h)\n                (open ?h)\n                )\n            (and\n                (not (in ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        (when\n            (on ?e ?h)\n            (and\n                (not (on ?e ?h))\n                (on ?e ?c)\n                )\n            )\n        )\n    )",
          "event_feedback": "The {{ e }} floats up to the ceiling.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_start",
          "pddl": "(:event ANTIGRAVPLAYERSTART\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (room ?r workshop)\n        (at ?p ?r)\n        (not (floating ?p))\n        )\n    :effect (and\n        (floating ?p)\n        )\n    )",
          "event_feedback": "Magical experiments have reversed and dampened gravity in this room. You begin to float in the air.",
          "asp": ""
        },
        {
          "type_name": "workshop_antigravity_player_float_stop",
          "pddl": "(:event ANTIGRAVPLAYERSTOP\n    :parameters (?r - room ?p - player)\n    :precondition (and\n        (not (room ?r workshop))\n        (at ?p ?r)\n        (floating ?p)\n        )\n    :effect (and\n        (not (floating ?p))\n        )\n    )",
          "event_feedback": "Gravity behaves normally in this room. You stop floating in the air.",
          "asp": ""
        },
        {
          "type_name": "outhouse_teleport",
          "pddl": "(:event OUTHOUSETELEPORT\n    :parameters (?r - room ?p - player ?i - inventory)\n    :precondition (and\n        (room ?r outhouse)\n        (at ?p ?r)\n        )\n    :effect (and\n        (at ?p kitchen1)\n        (not (at ?p ?r))\n        (forall (?e - takeable)\n            (when\n                (in ?e ?i)\n                (and\n                    (at ?e kitchen1)\n                    (not (at ?e ?r))\n                )\n            )\n        )\n    )\n)",
          "event_feedback": "The world twists around you, and you suddenly find yourself elsewhere. {{ room_desc }}",
          "asp": "",
          "randomize": {
            "initial_value": "kitchen1",
            "replace_type": "room",
            "not_replacer": [
              "outhouse1"
            ]
          }
        },
        {
          "type_name": "potion_step_1",
          "pddl": "(:event POTIONSTEP1\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l ectoplasm)\n\t\t(whisked ?l)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(not (whisked ?l))\n\t\t(type liquid1 liquid)\n\t\t(at liquid1 ?r)\n\t\t(in liquid1 ?c)\n\t\t(accessible liquid1)\n\t\t)\n\t)\n",
          "event_feedback": "The ectoplasm rectangulates with a puff of vaporcreating a liquid.",
          "asp": "event_t(TURN,potion_step_1,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,ectoplasm1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,ectoplasm1,cauldron1), whisked_t(TURN,ectoplasm1).\ntype(liquid1,liquid) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN,liquid1,ROOM) :- event_t(TURN,potion_step_1,ROOM).\nin_t(TURN,liquid1,cauldron1) :- event_t(TURN,potion_step_1,ROOM).\naccessible_t(TURN,liquid1) :- event_t(TURN,potion_step_1,ROOM).\nat_t(TURN+1,liquid1,ROOM) :- at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,ectoplasm1,ROOM) :- turn(TURN), at_t(TURN,ectoplasm1,ROOM), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nin_t(TURN+1,ectoplasm1,cauldron1) :- turn(TURN), in_t(TURN,ectoplasm1,cauldron1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\naccessible_t(TURN+1,ectoplasm1) :- turn(TURN), accessible_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_).\nwhisked_t(TURN+1,ectoplasm1) :- turn(TURN), whisked_t(TURN,ectoplasm1), not event_t(TURN,potion_step_1,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_2",
          "pddl": "(:event POTIONSTEP2\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid1 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i lilyofthevalley)\n\t\t(in ?i ?c)\n\t\t(in liquid1 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid1 liquid))\n\t\t(not (at liquid1 ?r))\n\t\t(not (in liquid1 ?c))\n\t\t(not (accessible liquid1))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i lilyofthevalley))\n\t\t(type liquid2 liquid)\n\t\t(at liquid2  ?r)\n\t\t(in liquid2  ?c)\n\t\t(accessible liquid2 )\n\t\t)\n\t)\n",
          "event_feedback": "The lily of the valley combines with the liquid in the cauldron with a phase shift.",
          "asp": "event_t(TURN,potion_step_2,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,lilyofthevalley1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid1,cauldron1), in_t(TURN,lilyofthevalley1,cauldron1).\ntype(liquid2,liquid) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN,liquid2,ROOM) :- event_t(TURN,potion_step_2,ROOM).\nin_t(TURN,liquid2,cauldron1) :- event_t(TURN,potion_step_2,ROOM).\naccessible_t(TURN,liquid2) :- event_t(TURN,potion_step_2,ROOM).\nat_t(TURN+1,liquid2,ROOM) :- at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid1,ROOM) :- turn(TURN), at_t(TURN,liquid1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid1,cauldron1) :- turn(TURN), in_t(TURN,liquid1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid1) :- turn(TURN), accessible_t(TURN,liquid1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nat_t(TURN+1,lilyofthevalley1,ROOM) :- turn(TURN), at_t(TURN,lilyofthevalley1,ROOM), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_).\nin_t(TURN+1,lilyofthevalley1,cauldron1) :- turn(TURN), in_t(TURN,lilyofthevalley1,cauldron1), not event_t(TURN,potion_step_2,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_3",
          "pddl": "(:event POTIONSTEP3\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid2 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i peach)\n\t\t(in ?i ?c)\n\t\t(in liquid2 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid2 liquid))\n\t\t(not (at liquid2 ?r))\n\t\t(not (in liquid2 ?c))\n\t\t(not (accessible liquid2))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i peach))\n\t\t(type liquid3 liquid)\n\t\t(at liquid3  ?r)\n\t\t(in liquid3  ?c)\n\t\t(accessible liquid3 )\n\t\t)\n\t)\n",
          "event_feedback": "The peach mingles with the liquid in the cauldron with a gloopy sound.",
          "asp": "event_t(TURN,potion_step_3,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,peach1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid2,cauldron1), in_t(TURN,peach1,cauldron1).\ntype(liquid3,liquid) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN,liquid3,ROOM) :- event_t(TURN,potion_step_3,ROOM).\nin_t(TURN,liquid3,cauldron1) :- event_t(TURN,potion_step_3,ROOM).\naccessible_t(TURN,liquid3) :- event_t(TURN,potion_step_3,ROOM).\nat_t(TURN+1,liquid3,ROOM) :- at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid2,ROOM) :- turn(TURN), at_t(TURN,liquid2,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid2,cauldron1) :- turn(TURN), in_t(TURN,liquid2,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid2) :- turn(TURN), accessible_t(TURN,liquid2), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nat_t(TURN+1,peach1,ROOM) :- turn(TURN), at_t(TURN,peach1,ROOM), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_).\nin_t(TURN+1,peach1,cauldron1) :- turn(TURN), in_t(TURN,peach1,cauldron1), not event_t(TURN,potion_step_3,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_4",
          "pddl": "(:event POTIONSTEP4\n\t:parameters (?l - liquid ?i - ingredient ?c - container ?r - room)\n\t:precondition (and\n\t\t(at liquid3 ?r)\n\t\t(at ?c ?r)\n\t\t(at ?i ?r)\n\t\t(type ?c cauldron)\n\t\t(type ?i spider)\n\t\t(in ?i ?c)\n\t\t(in liquid3 ?c)\n\t\t)\n\t:effect (and\n\t\t(not (type liquid3 liquid))\n\t\t(not (at liquid3 ?r))\n\t\t(not (in liquid3 ?c))\n\t\t(not (accessible liquid3))\n\t\t(not (at ?i ?r))\n\t\t(not (in ?i ?c))\n\t\t(not (type ?i spider))\n\t\t(type liquid4 liquid)\n\t\t(at liquid4  ?r)\n\t\t(in liquid4  ?c)\n\t\t(accessible liquid4 )\n\t\t)\n\t)\n",
          "event_feedback": "The spider absorbs into the liquid in the cauldron with a pop.",
          "asp": "event_t(TURN,potion_step_4,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,spider1,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid3,cauldron1), in_t(TURN,spider1,cauldron1).\ntype(liquid4,liquid) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN,liquid4,ROOM) :- event_t(TURN,potion_step_4,ROOM).\nin_t(TURN,liquid4,cauldron1) :- event_t(TURN,potion_step_4,ROOM).\naccessible_t(TURN,liquid4) :- event_t(TURN,potion_step_4,ROOM).\nat_t(TURN+1,liquid4,ROOM) :- at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid3,ROOM) :- turn(TURN), at_t(TURN,liquid3,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid3,cauldron1) :- turn(TURN), in_t(TURN,liquid3,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid3) :- turn(TURN), accessible_t(TURN,liquid3), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nat_t(TURN+1,spider1,ROOM) :- turn(TURN), at_t(TURN,spider1,ROOM), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_).\nin_t(TURN+1,spider1,cauldron1) :- turn(TURN), in_t(TURN,spider1,cauldron1), not event_t(TURN,potion_step_4,ROOM), room(ROOM,_)."
        },
        {
          "type_name": "potion_step_5",
          "pddl": "(:event POTIONSTEP5\n\t:parameters (l - liquid ?c - container ?r - room)\n\t:precondition (and\n\t\t(at ?l ?r)\n\t\t(at ?c ?r)\n\t\t(in ?l ?c)\n\t\t(type ?c cauldron)\n\t\t(type ?l spider)\n\t\t(cold ?c)\n\t\t)\n\t:effect (and\n\t\t(not (at ?l ?r))\n\t\t(not (in ?l ?c))\n\t\t(not (accessible ?l))\n\t\t(type potion1 potion)\n\t\t(at potion1 ?r)\n\t\t(in potion1 ?c)\n\t\t(accessible potion1)\n\t\t)\n\t)\n",
          "event_feedback": "The liquid in the cold cauldron undulates with a phase shiftleaving the finished potion.",
          "asp": "event_t(TURN,potion_step_5,ROOM) :- turn(TURN), room(ROOM,_), at_t(TURN,liquid4,ROOM), at_t(TURN,cauldron1,ROOM),in_t(TURN,liquid4,cauldron1), cold_t(TURN,cauldron1).\ntype(potion1,potion) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN,potion1,ROOM) :- event_t(TURN,potion_step_5,ROOM).\nin_t(TURN,potion1,cauldron1) :- event_t(TURN,potion_step_5,ROOM).\naccessible_t(TURN,potion1) :- event_t(TURN,potion_step_5,ROOM).\nat_t(TURN+1,potion1,ROOM) :- at_t(TURN,potion1,ROOM), turn(TURN), room(ROOM,_).\nin_t(TURN+1,potion1,cauldron1) :- in_t(TURN,potion1,cauldron1), turn(TURN), room(ROOM,_).\naccessible_t(TURN+1,potion1) :- accessible_t(TURN,potion1), turn(TURN), room(ROOM,_).\nat_t(TURN+1,liquid4,ROOM) :- turn(TURN), at_t(TURN,liquid4,ROOM), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\nin_t(TURN+1,liquid4,cauldron1) :- turn(TURN), in_t(TURN,liquid4,cauldron1), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_).\naccessible_t(TURN+1,liquid4) :- turn(TURN), accessible_t(TURN,liquid4), not event_t(TURN,potion_step_5,ROOM), room(ROOM,_)."
        }
      ],
      "bench_turn_limit": 50,
      "prompt_template_set": "potion_brewing"
    }
  ]
}